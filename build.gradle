plugins {
    id "com.jfrog.bintray" version "1.7"
//    id "net.saliman.cobertura" version "2.3.1"
    id "com.github.kt3k.coveralls" version "2.8.2"
}

//cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

apply from: "./libraries.gradle"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

allprojects {
    tasks.withType(Javadoc) {
        options { encoding "UTF-8" charSet 'UTF-8' links "http://docs.oracle.com/javase/7/docs/api" }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
sourceSets {
    main {
        java {
            srcDir 'src/main/java' // 指定源码目录
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDir 'src/test/java' // 指定源码目录
        }
        resources {
            srcDir 'src/test/resources' //资源目录
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("ossrhUsername"), password: System.getenv("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'java构建微服务常用方法集合'
                url 'https://github.com/tevid/jbox'

                scm {
                    url 'https://github.com/tevid/jbox'
                    connection 'https://github.com/tevid/jbox.git'
                    developerConnection 'git@github.com:tevid/jbox.git'
                }

                licenses {
                    license {
                        name 'Apache-2.0 Licence'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'joke59139'
                        name 'joezou'
                        email 'yixian.zou@gmail.com'
                    }
                }
            }
        }
    }
}


idea {
    project {
        languageLevel = '1.8'
    }
}

dependencies {
    compile(libraries.springCore)
    compile(libraries.springTest)
    compile(libraries.springBeans)
    compile(libraries.springContext)
    compile(libraries.fastjson)
    compile(libraries.commonsLang)
    compile(libraries.hamcrestAll)
    compile(libraries.guava)
    compile(libraries.httpclient)
    compile(libraries.jacksonDataBind)
    compile(libraries.thrift)
    compile(libraries.nsq)
    compile(libraries.lombok)

    compile(libraries.jedis)
    compile(libraries.slf4j)

    testCompile(libraries.springTest)
    testCompile(libraries.junit)
}
